{"version":3,"sources":["webpack:///./src/views/Auth.vue","webpack:///./src/use/login-form.js","webpack:///./src/views/Auth.vue?59b5"],"names":["for","class","onSubmit","eError","type","id","email","eBlur","pError","password","pBlur","disabled","isSubmitting","isTooManyAttempts","useLoginForm","store","useStore","router","useRouter","useForm","handleSubmit","submitCount","useField","yup","trim","required","value","errorMessage","handleBlur","MIN_LENGTH","min","computed","watch","val","setTimeout","values","dispatch","push","setup","route","query","message","error","render","__scopeId"],"mappings":"qNAEI,eAAwB,UAApB,mBAAe,G,EAGjB,eAAgC,SAAzBA,IAAI,SAAQ,SAAK,G,YAMxB,eAAoC,SAA7BA,IAAI,YAAW,UAAM,G,mBAMzBC,MAAM,e,wEAhBb,eAmBO,QAnBDA,MAAM,OAAQ,SAAM,8CAAU,EAAAC,UAAA,EAAAA,SAAA,qBAAQ,e,CAC1C,EAEA,eAIM,OAJAD,MAAK,yBAA6B,EAAAE,U,CACtC,E,eACA,eAA6D,SAAtDC,KAAK,QAAQC,GAAG,Q,qDAAiB,EAAAC,MAAK,IAAG,OAAI,8BAAE,EAAAC,OAAA,EAAAA,MAAA,sB,mBAAd,EAAAD,SAC3B,EAAAH,Q,iBAAb,eAAyC,yBAAjB,EAAAA,QAAM,I,0BAGhC,eAIM,OAJAF,MAAK,yBAA6B,EAAAO,U,CACtC,E,eACA,eAAsE,SAA/DJ,KAAK,WAAWC,GAAG,W,qDAAoB,EAAAI,SAAQ,IAAG,OAAI,8BAAE,EAAAC,OAAA,EAAAA,MAAA,sB,mBAAjB,EAAAD,YACjC,EAAAD,Q,iBAAb,eAAyC,yBAAjB,EAAAA,QAAM,I,0BAGhC,eAAsG,UAA9FP,MAAM,cAAcG,KAAK,SAAUO,SAAU,EAAAC,cAAgB,EAAAC,mBAAmB,QAAK,gBAC9D,EAAAA,mB,iBAA/B,eAEM,MAFN,EAAkD,mE,kJCX/C,SAASC,IACd,IAAMC,EAAQC,iBACRC,EAASC,iBAFc,EAGqBC,iBAA3CC,EAHsB,EAGtBA,aAAcR,EAHQ,EAGRA,aAAcS,EAHN,EAGMA,YAHN,EAKmCC,eAC9D,QACAC,SAEGC,OACAC,SAAS,4BACTnB,MAAM,uCANGA,EALe,EAKtBoB,MAA4BvB,EALN,EAKRwB,aAAkCpB,EAL1B,EAKcqB,WASrCC,EAAa,EAdU,EAgBsCP,eACjE,WACAC,SAEGC,OACAC,SAAS,6BACTK,IAAID,EAJP,sCAIkDA,EAJlD,eAFYpB,EAhBe,EAgBtBiB,MAA+BlB,EAhBT,EAgBLmB,aAAkCjB,EAhB7B,EAgBiBkB,WASxCf,EAAoBkB,gBAAS,kBAAMV,EAAYK,OAAS,KAE9DM,eAAMnB,GAAmB,SAAAoB,GACnBA,GACFC,YAAW,kBAAMb,EAAYK,MAAQ,IAAG,SAI5C,IAAMxB,EAAWkB,EAAY,yDAAC,WAAMe,GAAN,0GAEpBpB,EAAMqB,SAAS,aAAcD,GAFT,OAG1BlB,EAAOoB,KAAK,KAHc,0GAAD,uDAQ7B,MAAO,CACL/B,QACAG,WACAN,SACAK,SACAD,QACAG,QACAR,WACAU,eACAC,qBD3BW,OACbyB,MADa,WAEX,IAAMC,EAAQ,iBACRxB,EAAQ,iBAQd,OANIwB,EAAMC,MAAMC,SACd1B,EAAMqB,SAAS,aAAc,CAC3BV,MAAO,OAAAgB,EAAA,MAAMH,EAAMC,MAAMC,SACzBrC,KAAM,YAGV,kBAAWU,OErCf,EAAO6B,OAASA,EAChB,EAAOC,UAAY,kBAEJ","file":"js/chunk-2d0be70b.a50830a0.js","sourcesContent":["<template>\n  <form class=\"card\" @submit.prevent=\"onSubmit\">\n    <h1>Войти в систему</h1>\n\n    <div :class=\"['form-control', {invalid: eError}]\">\n      <label for=\"email\">Email</label>\n      <input type=\"email\" id=\"email\" v-model=\"email\" @blur=\"eBlur\">\n      <small v-if=\"eError\">{{ eError }}</small>\n    </div>\n\n    <div :class=\"['form-control', {invalid: pError}]\">\n      <label for=\"password\">Пароль</label>\n      <input type=\"password\" id=\"password\" v-model=\"password\" @blur=\"pBlur\">\n      <small v-if=\"pError\">{{ pError }}</small>\n    </div>\n\n    <button class=\"btn primary\" type=\"submit\" :disabled=\"isSubmitting || isTooManyAttempts\">Войти</button>\n    <div class=\"text-danger\" v-if=\"isTooManyAttempts\">\n      Вы слишком часто пытаетесь войти в систему. Попробуйте позже\n    </div>\n  </form>\n</template>\n\n<script>\nimport {useRoute} from 'vue-router'\nimport {useStore} from 'vuex'\nimport {error} from '../utils/error'\nimport {useLoginForm} from '../use/login-form'\n\nexport default {\n  setup() {\n    const route = useRoute()\n    const store = useStore()\n\n    if (route.query.message) {\n      store.dispatch('setMessage', {\n        value: error(route.query.message),\n        type: 'warning'\n      })\n    }\n    return {...useLoginForm()}\n  }\n}\n</script>\n\n<style scoped>\n\n</style>","import {useField, useForm} from 'vee-validate'\nimport * as yup from 'yup'\nimport {computed, watch} from 'vue'\nimport {useStore} from 'vuex'\nimport {useRouter} from 'vue-router'\n\nexport function useLoginForm() {\n  const store = useStore()\n  const router = useRouter()\n  const {handleSubmit, isSubmitting, submitCount} = useForm()\n\n  const {value: email, errorMessage: eError, handleBlur: eBlur} = useField(\n    'email',\n    yup\n      .string()\n      .trim()\n      .required('Пожалуйста введите email')\n      .email('Необходимо ввести корректный email')\n  )\n\n  const MIN_LENGTH = 6\n\n  const {value: password, errorMessage: pError, handleBlur: pBlur} = useField(\n    'password',\n    yup\n      .string()\n      .trim()\n      .required('Пожалуйста введите пароль')\n      .min(MIN_LENGTH, `Пароль не может быть меньше ${MIN_LENGTH} символов`)\n  )\n\n  const isTooManyAttempts = computed(() => submitCount.value >= 3)\n\n  watch(isTooManyAttempts, val => {\n    if (val) {\n      setTimeout(() => submitCount.value = 0, 1500)\n    }\n  })\n\n  const onSubmit = handleSubmit(async values => {\n    try {\n      await store.dispatch('auth/login', values)\n      router.push('/')\n    } catch (e) {\n    }\n  })\n\n  return {\n    email,\n    password,\n    eError,\n    pError,\n    eBlur,\n    pBlur,\n    onSubmit,\n    isSubmitting,\n    isTooManyAttempts\n  }\n}","import { render } from \"./Auth.vue?vue&type=template&id=3da74d8a&scoped=true\"\nimport script from \"./Auth.vue?vue&type=script&lang=js\"\nexport * from \"./Auth.vue?vue&type=script&lang=js\"\nscript.render = render\nscript.__scopeId = \"data-v-3da74d8a\"\n\nexport default script"],"sourceRoot":""}